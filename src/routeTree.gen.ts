/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WisdomImport } from './routes/wisdom'
import { Route as IndexImport } from './routes/index'
import { Route as WisdomIndexImport } from './routes/wisdom/index'
import { Route as WisdomNinjascriptIndicatorsImport } from './routes/wisdom/ninjascript-indicators'

// Create/Update Routes

const WisdomRoute = WisdomImport.update({
  id: '/wisdom',
  path: '/wisdom',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WisdomIndexRoute = WisdomIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => WisdomRoute,
} as any)

const WisdomNinjascriptIndicatorsRoute =
  WisdomNinjascriptIndicatorsImport.update({
    id: '/ninjascript-indicators',
    path: '/ninjascript-indicators',
    getParentRoute: () => WisdomRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/wisdom': {
      id: '/wisdom'
      path: '/wisdom'
      fullPath: '/wisdom'
      preLoaderRoute: typeof WisdomImport
      parentRoute: typeof rootRoute
    }
    '/wisdom/ninjascript-indicators': {
      id: '/wisdom/ninjascript-indicators'
      path: '/ninjascript-indicators'
      fullPath: '/wisdom/ninjascript-indicators'
      preLoaderRoute: typeof WisdomNinjascriptIndicatorsImport
      parentRoute: typeof WisdomImport
    }
    '/wisdom/': {
      id: '/wisdom/'
      path: '/'
      fullPath: '/wisdom/'
      preLoaderRoute: typeof WisdomIndexImport
      parentRoute: typeof WisdomImport
    }
  }
}

// Create and export the route tree

interface WisdomRouteChildren {
  WisdomNinjascriptIndicatorsRoute: typeof WisdomNinjascriptIndicatorsRoute
  WisdomIndexRoute: typeof WisdomIndexRoute
}

const WisdomRouteChildren: WisdomRouteChildren = {
  WisdomNinjascriptIndicatorsRoute: WisdomNinjascriptIndicatorsRoute,
  WisdomIndexRoute: WisdomIndexRoute,
}

const WisdomRouteWithChildren =
  WisdomRoute._addFileChildren(WisdomRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/wisdom': typeof WisdomRouteWithChildren
  '/wisdom/ninjascript-indicators': typeof WisdomNinjascriptIndicatorsRoute
  '/wisdom/': typeof WisdomIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/wisdom/ninjascript-indicators': typeof WisdomNinjascriptIndicatorsRoute
  '/wisdom': typeof WisdomIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/wisdom': typeof WisdomRouteWithChildren
  '/wisdom/ninjascript-indicators': typeof WisdomNinjascriptIndicatorsRoute
  '/wisdom/': typeof WisdomIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/wisdom' | '/wisdom/ninjascript-indicators' | '/wisdom/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/wisdom/ninjascript-indicators' | '/wisdom'
  id:
    | '__root__'
    | '/'
    | '/wisdom'
    | '/wisdom/ninjascript-indicators'
    | '/wisdom/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  WisdomRoute: typeof WisdomRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  WisdomRoute: WisdomRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/wisdom"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/wisdom": {
      "filePath": "wisdom.tsx",
      "children": [
        "/wisdom/ninjascript-indicators",
        "/wisdom/"
      ]
    },
    "/wisdom/ninjascript-indicators": {
      "filePath": "wisdom/ninjascript-indicators.tsx",
      "parent": "/wisdom"
    },
    "/wisdom/": {
      "filePath": "wisdom/index.tsx",
      "parent": "/wisdom"
    }
  }
}
ROUTE_MANIFEST_END */
